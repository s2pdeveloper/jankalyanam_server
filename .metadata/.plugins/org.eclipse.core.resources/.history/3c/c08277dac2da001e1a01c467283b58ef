package com.app.config;

import java.util.Arrays;
import java.util.List;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiKey;
import springfox.documentation.service.AuthorizationScope;
import springfox.documentation.service.SecurityReference;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spi.service.contexts.SecurityContext;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@Configuration
@EnableWebMvc
@EnableSwagger2
public class WebConfig implements WebMvcConfigurer {

	  @Override
	  public void addCorsMappings(CorsRegistry registry) {

	    registry.addMapping("/**")
	      .allowedOrigins("*")
	      .allowedMethods("GET", "POST","PUT","DELETE","PATCH")
	      .allowedHeaders("*");
	  


	  }
	  public static final String AUTHORIZATION_HEADER = "Authorization";

	    private ApiKey apiKey(){
	        return new ApiKey("JWT", AUTHORIZATION_HEADER, "header");
	    }

//	    private ApiInfo apiInfo(){
//	        return new ApiInfo(
//	                "Spring Boot Blog REST APIs",
//	                "Spring Boot Blog REST API Documentation",
//	                "1",
//	                "Terms of service",
//	                new Contact("Ramesh Fadatare", "www.javaguides.net", "ramesh@gmail.com"),
//	                "License of API",
//	                "API license URL",
//	                Collections.emptyList()
//	        );
//	    }
		@Bean
		public Docket api() {
		return new Docket(DocumentationType.SWAGGER_2)
		 .securityContexts(Arrays.asList(securityContext()))
		 .securitySchemes(Arrays.asList(apiKey()))
		.select()
		.apis(RequestHandlerSelectors.any())
		.paths(PathSelectors.any())
		.build();
		}
		
	    private SecurityContext securityContext(){
	        return SecurityContext.builder().securityReferences(defaultAuth()).build();
	    }

	    private List<SecurityReference> defaultAuth(){
	        AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");
	        AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];
	        authorizationScopes[0] = authorizationScope;
	        return Arrays.asList(new SecurityReference("JWT", authorizationScopes));
	    }
	    
	    @Override
	    public void addResourceHandlers(ResourceHandlerRegistry registry) {
	      registry.addResourceHandler("swagger-ui.html")
	      .addResourceLocations("classpath:/META-INF/resources/");

	      registry.addResourceHandler("/webjars/**")
	      .addResourceLocations("classpath:/META-INF/resources/webjars/");
	    }

}
